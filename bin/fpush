#!/usr/bin/env perl
use FindBin;
use IPC::Run run;

# this is a pretty sloppy script but it keeps several flinkt dev instances in sync with the appropriate "couchapp push"

my $couchapp = `which couchapp`;
chomp $couchapp;

my $selector = $FindBin::Bin . "/../webclient/_attachments/js/selector-dev.js";
unless (-e $selector) {
    die "no file at $selector";
}

my $url = `grep 'var site = ' '$selector'`;
chomp $url;
unless ($url) {
    die "failed to find site variable declaration in $selector"
}

$url =~ s/^.*var site = //;
$url =~ s/^['"](.*)['"];\s*$/$1/;

my $host = $url;
$host =~ s|^http.*://||;

if ($host =~ /^(.*?)\:(.*?)$/) {
    # remove the :PORT
    $host = $1;
}

print STDERR "pushing to $host ($url) with $couchapp\n";

# local: start a server as needed
# remote: make an ssh tunnel so we don't bump into the app guards 
my $child_pid;
if ($url =~ /localhost/) {
    my $cmd = 'ps ax | grep couchdb | grep -v grep';
    my @out = `$cmd`;
    if (@out == 0) {
        print STDERR "couchdb not running: starting couchdb server to take updates...\n";
        $child_pid = fork();
        if (not $child_pid) {
            my $cmd = 'couchdb -a "' . $FindBin::Bin . '/../etc-couchdb/local.ini"';
            # child
            exec $cmd;
        }
    }
}
elsif ($host =~ /flinkt.org/) {
    $url = 'http://localhost:5982';
    print STDERR "Tunneling to $host, redirecting port 5982 to its 5983...\n";
    $child_pid = fork();
    if (not $child_pid) {
        # child
        my $cmd = "ssh -L 5982:localhost:5983 $host -N";
        exec $cmd;
    }
}

if ($ENV{FLINKTP} and $ENV{FLINKTU}) {
    print STDERR "setting user and password\n";
    my $up = "$ENV{FLINKTU}:$ENV{FLINKTP}";
    $url =~ s|//|//$up\@|;
}

my $cmd = "$couchapp push $url/flinktdb";
print "RUN: $cmd\n";
my $rv = system $cmd;
$rv /= 256;
if ($rv) {
    die "ERROR: $!\n";
}
if ($child_pid) {
    print STDER "killing temporary background process...\n";
    system "kill $child_pid";
}

